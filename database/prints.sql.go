// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: prints.sql

package database

import (
	"context"
	"database/sql"
)

const addPrint = `-- name: AddPrint :one
INSERT INTO prints (picture_id, paper_id, order_id, cart_id, width, height, border_size, crop_x, crop_y, cost, quantity) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11) RETURNING id, picture_id, paper_id, order_id, cart_id, width, height, border_size, crop_x, crop_y, cost, quantity
`

type AddPrintParams struct {
	PictureID  int64         `json:"pictureId"`
	PaperID    int64         `json:"paperId"`
	OrderID    sql.NullInt64 `json:"orderId"`
	CartID     sql.NullInt64 `json:"cartId"`
	Width      float64       `json:"width"`
	Height     float64       `json:"height"`
	BorderSize float64       `json:"borderSize"`
	CropX      int64         `json:"cropX"`
	CropY      int64         `json:"cropY"`
	Cost       float64       `json:"cost"`
	Quantity   int64         `json:"quantity"`
}

func (q *Queries) AddPrint(ctx context.Context, arg AddPrintParams) (Print, error) {
	row := q.queryRow(ctx, q.addPrintStmt, addPrint,
		arg.PictureID,
		arg.PaperID,
		arg.OrderID,
		arg.CartID,
		arg.Width,
		arg.Height,
		arg.BorderSize,
		arg.CropX,
		arg.CropY,
		arg.Cost,
		arg.Quantity,
	)
	var i Print
	err := row.Scan(
		&i.ID,
		&i.PictureID,
		&i.PaperID,
		&i.OrderID,
		&i.CartID,
		&i.Width,
		&i.Height,
		&i.BorderSize,
		&i.CropX,
		&i.CropY,
		&i.Cost,
		&i.Quantity,
	)
	return i, err
}

const deletePrint = `-- name: DeletePrint :exec
DELETE FROM prints WHERE id = ?1
`

func (q *Queries) DeletePrint(ctx context.Context, id int64) error {
	_, err := q.exec(ctx, q.deletePrintStmt, deletePrint, id)
	return err
}

const updatePrintQuantity = `-- name: UpdatePrintQuantity :exec
UPDATE prints SET quantity = ?1 WHERE id = ?2
`

type UpdatePrintQuantityParams struct {
	Quantity int64 `json:"quantity"`
	ID       int64 `json:"id"`
}

func (q *Queries) UpdatePrintQuantity(ctx context.Context, arg UpdatePrintQuantityParams) error {
	_, err := q.exec(ctx, q.updatePrintQuantityStmt, updatePrintQuantity, arg.Quantity, arg.ID)
	return err
}
